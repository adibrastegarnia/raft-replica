// Code generated by protoc-gen-go. DO NOT EDIT.
// source: atomix/raft/system.proto

package raft

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Raft system metadata
type RaftMetadata struct {
	Term                 int64    `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`
	Vote                 string   `protobuf:"bytes,2,opt,name=vote,proto3" json:"vote,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftMetadata) Reset()         { *m = RaftMetadata{} }
func (m *RaftMetadata) String() string { return proto.CompactTextString(m) }
func (*RaftMetadata) ProtoMessage()    {}
func (*RaftMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_95061fb6dacccbf8, []int{0}
}

func (m *RaftMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftMetadata.Unmarshal(m, b)
}
func (m *RaftMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftMetadata.Marshal(b, m, deterministic)
}
func (m *RaftMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftMetadata.Merge(m, src)
}
func (m *RaftMetadata) XXX_Size() int {
	return xxx_messageInfo_RaftMetadata.Size(m)
}
func (m *RaftMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_RaftMetadata proto.InternalMessageInfo

func (m *RaftMetadata) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftMetadata) GetVote() string {
	if m != nil {
		return m.Vote
	}
	return ""
}

// Raft system configuration
type RaftConfiguration struct {
	Index                int64         `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Term                 int64         `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Timestamp            int64         `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Members              []*RaftMember `protobuf:"bytes,4,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RaftConfiguration) Reset()         { *m = RaftConfiguration{} }
func (m *RaftConfiguration) String() string { return proto.CompactTextString(m) }
func (*RaftConfiguration) ProtoMessage()    {}
func (*RaftConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_95061fb6dacccbf8, []int{1}
}

func (m *RaftConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftConfiguration.Unmarshal(m, b)
}
func (m *RaftConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftConfiguration.Marshal(b, m, deterministic)
}
func (m *RaftConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftConfiguration.Merge(m, src)
}
func (m *RaftConfiguration) XXX_Size() int {
	return xxx_messageInfo_RaftConfiguration.Size(m)
}
func (m *RaftConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_RaftConfiguration proto.InternalMessageInfo

func (m *RaftConfiguration) GetIndex() int64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *RaftConfiguration) GetTerm() int64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *RaftConfiguration) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *RaftConfiguration) GetMembers() []*RaftMember {
	if m != nil {
		return m.Members
	}
	return nil
}

func init() {
	proto.RegisterType((*RaftMetadata)(nil), "atomix.raft.RaftMetadata")
	proto.RegisterType((*RaftConfiguration)(nil), "atomix.raft.RaftConfiguration")
}

func init() { proto.RegisterFile("atomix/raft/system.proto", fileDescriptor_95061fb6dacccbf8) }

var fileDescriptor_95061fb6dacccbf8 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0x49, 0x5b, 0x95, 0xa6, 0x6e, 0x0c, 0xa2, 0x41, 0x5c, 0x94, 0xae, 0xba, 0x4a, 0x51,
	0xc1, 0x17, 0x70, 0xed, 0x26, 0x6f, 0x30, 0xa5, 0x53, 0xc9, 0x22, 0x4d, 0x49, 0x46, 0xa9, 0x2f,
	0x71, 0x9f, 0xf9, 0x92, 0xe4, 0xfe, 0x74, 0x13, 0x26, 0xf3, 0x9d, 0x73, 0x98, 0xc3, 0x25, 0x90,
	0xb3, 0x66, 0x1b, 0x3c, 0xcc, 0x34, 0x84, 0xff, 0x40, 0x68, 0xd5, 0xea, 0x1d, 0x39, 0xd1, 0x64,
	0xa2, 0x22, 0x79, 0x79, 0xda, 0xcb, 0xe2, 0x93, 0x45, 0xdd, 0x27, 0xbf, 0xd7, 0x30, 0xd3, 0x37,
	0x12, 0x4c, 0x40, 0x20, 0x04, 0xaf, 0x08, 0xbd, 0x95, 0xac, 0x65, 0x7d, 0xa9, 0xd3, 0x1c, 0x77,
	0x7f, 0x8e, 0x50, 0x16, 0x2d, 0xeb, 0x6b, 0x9d, 0xe6, 0xee, 0xc0, 0xf8, 0x43, 0x34, 0x7e, 0xb9,
	0x65, 0x36, 0x3f, 0xbf, 0x1e, 0xc8, 0xb8, 0x45, 0x3c, 0xf2, 0x1b, 0xb3, 0x4c, 0xb8, 0x9d, 0xec,
	0xf9, 0x73, 0xc9, 0x2c, 0x76, 0x99, 0xaf, 0xbc, 0x26, 0x63, 0x31, 0x10, 0xd8, 0x55, 0x96, 0x09,
	0x5c, 0x17, 0xe2, 0x8d, 0xdf, 0x59, 0xb4, 0x23, 0xfa, 0x20, 0xab, 0xb6, 0xec, 0x9b, 0xf7, 0x67,
	0xb5, 0x2b, 0xa3, 0xf2, 0xc5, 0x91, 0xeb, 0xb3, 0x6e, 0xbc, 0x4d, 0x7d, 0x3e, 0x8e, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x7e, 0x6d, 0xa4, 0x2a, 0x10, 0x01, 0x00, 0x00,
}
