// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/atomix/raft/protocol/cluster.go

// Package mock is a generated GoMock package.
package mock

import (
	protocol "github.com/atomix/atomix-raft-node/pkg/atomix/raft/protocol"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCluster is a mock of Cluster interface
type MockCluster struct {
	ctrl     *gomock.Controller
	recorder *MockClusterMockRecorder
}

// MockClusterMockRecorder is the mock recorder for MockCluster
type MockClusterMockRecorder struct {
	mock *MockCluster
}

// NewMockCluster creates a new mock instance
func NewMockCluster(ctrl *gomock.Controller) *MockCluster {
	mock := &MockCluster{ctrl: ctrl}
	mock.recorder = &MockClusterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCluster) EXPECT() *MockClusterMockRecorder {
	return m.recorder
}

// Member mocks base method
func (m *MockCluster) Member() protocol.MemberID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Member")
	ret0, _ := ret[0].(protocol.MemberID)
	return ret0
}

// Member indicates an expected call of Member
func (mr *MockClusterMockRecorder) Member() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Member", reflect.TypeOf((*MockCluster)(nil).Member))
}

// Members mocks base method
func (m *MockCluster) Members() []protocol.MemberID {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Members")
	ret0, _ := ret[0].([]protocol.MemberID)
	return ret0
}

// Members indicates an expected call of Members
func (mr *MockClusterMockRecorder) Members() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Members", reflect.TypeOf((*MockCluster)(nil).Members))
}

// GetMember mocks base method
func (m *MockCluster) GetMember(memberID protocol.MemberID) *protocol.Member {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMember", memberID)
	ret0, _ := ret[0].(*protocol.Member)
	return ret0
}

// GetMember indicates an expected call of GetMember
func (mr *MockClusterMockRecorder) GetMember(memberID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMember", reflect.TypeOf((*MockCluster)(nil).GetMember), memberID)
}

// GetClient mocks base method
func (m *MockCluster) GetClient(memberID protocol.MemberID) (protocol.RaftServiceClient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClient", memberID)
	ret0, _ := ret[0].(protocol.RaftServiceClient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClient indicates an expected call of GetClient
func (mr *MockClusterMockRecorder) GetClient(memberID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClient", reflect.TypeOf((*MockCluster)(nil).GetClient), memberID)
}
